{"ast":null,"code":"import axios from 'axios';\nvar headers = {\n  'Content-Type': 'application/json',\n  'token': localStorage.getItem('token')\n};\nexport function NoteController() {\n  var header = {\n    'Content-Type': 'application/json',\n    'token': localStorage.getItem(\"token\")\n  };\n  return axios.get(\"http://localhost:8080/\" + 'notes/getnotes/' + localStorage.getItem('token'), {\n    header: header\n  });\n}\nexport function getAllLabels() {\n  console.log(localStorage.getItem('token'));\n  var header = {\n    'Content-Type': 'application/json'\n  };\n  return axios.get(\"http://localhost:8080/\" + 'label/getlabels/' + localStorage.getItem('token'), {\n    header: header\n  });\n}\nexport function createNote(noteDetails) {\n  console.log(localStorage.getItem('token'));\n  var header = {\n    'Content-Type': 'application/json'\n  };\n  return axios.post(\"http://localhost:8080/\" + 'notes/createnote/' + localStorage.getItem('token'), noteDetails, {\n    header: header\n  });\n}\nexport function updateNote(note, id) {\n  var headers = {\n    'Content-Type': 'application/json',\n    'token': localStorage.getItem('token')\n  };\n  console.log('id of note', id);\n  console.log('headr', headers);\n  console.log('note', note);\n  return axios.put('http://localhost:8080/notes/updatenote/' + id, note, {\n    headers: headers\n  });\n}\nexport function trashNote(noteId) {\n  console.log('headers', headers);\n  console.log('noteId', noteId);\n  return axios.put('http://localhost:8080/notes/trash/' + noteId, null, {\n    headers: headers\n  });\n}\nexport function getTrashedNotes() {\n  return axios.get('http://localhost:8080/notes/getrashnotes', {\n    headers: headers\n  });\n}\nexport function deletTrashedNotes(noteId) {\n  return axios.delete('http://localhost:8080/notes/deletenote/' + noteId, {\n    headers: headers\n  });\n}\nexport function archiveNote(noteId) {\n  return axios.put('http://localhost:8080/notes/archive/' + noteId, null, {\n    headers: headers\n  });\n}\nexport function getArchivedNotes() {\n  return axios.get('http://localhost:8080/notes/getarchivenotes', {\n    headers: headers\n  });\n}\nexport function setRemainder(abc, noteId) {\n  console.log('before', abc);\n  var datetime = new Date(abc).toISOString();\n  console.log('after', datetime);\n  console.log('param', headers);\n  return axios.post('http://localhost:8080/notes/remainder?datetime=' + datetime, {\n    headers: headers\n  });\n}","map":{"version":3,"sources":["/home/soumajit/ReactProjectFundoo/fundoo/src/Controller/NoteController.jsx"],"names":["axios","headers","localStorage","getItem","NoteController","header","get","getAllLabels","console","log","createNote","noteDetails","post","updateNote","note","id","put","trashNote","noteId","getTrashedNotes","deletTrashedNotes","delete","archiveNote","getArchivedNotes","setRemainder","abc","datetime","Date","toISOString"],"mappings":"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","sourcesContent":["\nimport axios from 'axios';\n\nconst headers={\n    'Content-Type': 'application/json',\n    'token':localStorage.getItem('token')\n}\nexport function NoteController() {\n    \n    let header = {\n        'Content-Type': 'application/json',\n        'token': localStorage.getItem(\"token\")\n    }\n    return axios.get(\"http://localhost:8080/\" + 'notes/getnotes/'+localStorage.getItem('token'), { header: header });\n}\nexport function getAllLabels() {\n    console.log(localStorage.getItem('token'))\n    let header = {\n        'Content-Type': 'application/json',\n        \n    }\n    return axios.get(\"http://localhost:8080/\" + 'label/getlabels/'+localStorage.getItem('token'), { header: header });\n}\nexport function createNote(noteDetails) {\n    console.log(localStorage.getItem('token'))\n    let header = {\n        'Content-Type': 'application/json',\n        }\n    return axios.post(\"http://localhost:8080/\" + 'notes/createnote/'+localStorage.getItem('token'),noteDetails, { header: header });\n}\nexport function updateNote(note,id) {\n    let headers = {\n        'Content-Type': 'application/json',\n        'token':localStorage.getItem('token')\n    }\n    console.log('id of note',id)\n    console.log('headr',headers)\n    console.log('note',note)\n    return axios.put('http://localhost:8080/notes/updatenote/'+id,note, { headers: headers});\n}\nexport function trashNote(noteId)\n{\n    console.log('headers',headers)\n    console.log('noteId',noteId)\n    return axios.put('http://localhost:8080/notes/trash/'+noteId,null,{ headers : headers });\n}\nexport function getTrashedNotes(){\n    return axios.get('http://localhost:8080/notes/getrashnotes',{ headers : headers });\n}\nexport function deletTrashedNotes(noteId){\n    return axios.delete('http://localhost:8080/notes/deletenote/'+noteId,{ headers : headers });\n}\nexport function archiveNote(noteId)\n{\n    return axios.put('http://localhost:8080/notes/archive/'+noteId,null,{ headers : headers });\n}\nexport function getArchivedNotes(){\n    return axios.get('http://localhost:8080/notes/getarchivenotes',{ headers : headers });\n}\n\nexport function setRemainder(abc,noteId)\n{\n    console.log('before',abc)\n   let datetime=new Date(abc).toISOString();\n   console.log('after',datetime)\n   console.log('param',headers)\n    return axios.post('http://localhost:8080/notes/remainder?datetime='+datetime,{ headers : headers });\n}"]},"metadata":{},"sourceType":"module"}