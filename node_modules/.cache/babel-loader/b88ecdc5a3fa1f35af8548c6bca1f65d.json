{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _Card = require('material-ui/Card');\n\nvar _FloatingActionButton = require('material-ui/FloatingActionButton');\n\nvar _FloatingActionButton2 = _interopRequireDefault(_FloatingActionButton);\n\nvar _remove = require('material-ui/svg-icons/content/remove');\n\nvar _remove2 = _interopRequireDefault(_remove);\n\nvar _FlatButton = require('material-ui/FlatButton');\n\nvar _FlatButton2 = _interopRequireDefault(_FlatButton);\n\nvar _jshashes = require('jshashes');\n\nvar _Upload = require('material-ui-upload/Upload');\n\nvar _Upload2 = _interopRequireDefault(_Upload);\n\nvar _index = require('./index.css');\n\nvar _index2 = _interopRequireDefault(_index);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n} // *-* mode: rjsx -*-\n\n\nvar UploadPreview = function (_Component) {\n  _inherits(UploadPreview, _Component);\n\n  function UploadPreview(props) {\n    _classCallCheck(this, UploadPreview);\n\n    var _this = _possibleConstructorReturn(this, (UploadPreview.__proto__ || Object.getPrototypeOf(UploadPreview)).call(this));\n\n    _this.exclusiveProps = ['title', 'children', 'onFileLoad', 'initialItems'];\n\n    _this.onFileLoad = function (e, file) {\n      var hash = new _jshashes.SHA1().hex(e.target.result);\n\n      var items = _extends({}, _this.state.items);\n\n      items[hash] = e.target.result;\n\n      _this.setState({\n        items: items\n      });\n\n      _this.props.onFileLoad(e, file);\n\n      _this.props.onChange(items);\n    };\n\n    _this.onRemoveAllClick = function (e) {\n      var items = {};\n\n      _this.setState({\n        items: items\n      });\n\n      _this.props.onChange(items);\n    };\n\n    _this.onRemoveClick = function (key) {\n      return function (e) {\n        var items = _extends({}, _this.state.items);\n\n        delete items[key];\n\n        _this.setState({\n          items: items\n        });\n\n        _this.props.onChange(items);\n      };\n    };\n\n    _this.renderPreview = function (key) {\n      return _react2.default.createElement('div', {\n        key: key,\n        className: _index2.default.PreviewContainer\n      }, _react2.default.createElement('img', {\n        src: _this.state.items[key],\n        className: _index2.default.Image\n      }), _react2.default.createElement(_FloatingActionButton2.default, {\n        className: _index2.default.RemoveItem,\n        mini: true,\n        onClick: _this.onRemoveClick(key)\n      }, _react2.default.createElement(_remove2.default, null)));\n    };\n\n    _this.renderPreviews = function () {\n      return _react2.default.createElement('div', {\n        className: _index2.default.PreviewsContainer\n      }, Object.keys(_this.state.items).map(_this.renderPreview));\n    };\n\n    _this.renderAddButton = function () {\n      return _react2.default.createElement(_Upload2.default, _extends({\n        onFileLoad: _this.onFileLoad,\n        // XXX: Force re-render on items change\n        // see: https://github.com/corpix/material-ui-upload/issues/8\n        key: Object.keys(_this.state.items).length\n      }, _this.getUploadProps()));\n    };\n\n    _this.renderRemoveButton = function () {\n      return _react2.default.createElement(_FlatButton2.default, {\n        label: 'Remove all',\n        style: {\n          visibility: Object.keys(_this.state.items).length ? 'visible' : 'hidden'\n        },\n        onClick: _this.onRemoveAllClick\n      });\n    };\n\n    _this.state = {\n      items: props.initialItems\n    };\n    return _this;\n  }\n\n  _createClass(UploadPreview, [{\n    key: 'getUploadProps',\n    value: function getUploadProps() {\n      var _this2 = this;\n\n      return Object.keys(this.props).filter(function (name) {\n        return _this2.exclusiveProps.indexOf(name) === -1;\n      }).reduce(function (acc, name) {\n        acc[name] = _this2.props[name];\n        return acc;\n      }, {\n        onFileLoad: this.onFileLoad\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return _react2.default.createElement(_Card.Card, null, _react2.default.createElement(_Card.CardHeader, {\n        title: this.props.title\n      }), _react2.default.createElement(_Card.CardMedia, null, this.renderPreviews()), _react2.default.createElement(_Card.CardActions, null, _react2.default.createElement('div', {\n        className: _index2.default.ActionsContainer\n      }, this.renderAddButton(), this.renderRemoveButton())));\n    }\n  }]);\n\n  return UploadPreview;\n}(_react.Component);\n\nUploadPreview.defaultProps = {\n  title: '',\n  label: 'Upload',\n  fileTypeRegex: /^image.*$/,\n  onFileLoad: function onFileLoad(e, file) {\n    return undefined;\n  },\n  onChange: function onChange(items) {\n    return undefined;\n  },\n  initialItems: {}\n};\nUploadPreview.propTypes = {\n  title: _propTypes2.default.string,\n  label: _propTypes2.default.string,\n  fileTypeRegex: _propTypes2.default.object,\n  onFileLoad: _propTypes2.default.func,\n  onChange: _propTypes2.default.func,\n  initialItems: _propTypes2.default.object\n};\nexports.default = UploadPreview;","map":null,"metadata":{},"sourceType":"script"}