{"ast":null,"code":"import _classCallCheck from \"/home/soumajit/ReactProjectFundoo/fundoo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/soumajit/ReactProjectFundoo/fundoo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/soumajit/ReactProjectFundoo/fundoo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/soumajit/ReactProjectFundoo/fundoo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/soumajit/ReactProjectFundoo/fundoo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/soumajit/ReactProjectFundoo/fundoo/src/Components/Dashboard/searchNote.jsx\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { InputBase, Card, Tooltip, TextField, CardContent } from '@material-ui/core';\nvar themes = createMuiTheme({\n  overrides: {\n    MuiPaper: {\n      rounded: {\n        borderRadius: \"8px\",\n        margin: \"10px\"\n      },\n      elevation24: {\n        boxShadow: \"none\"\n      }\n    },\n    MuiBackdrop: {\n      root: {\n        backgroundColor: \"rgba(15,15,15,0.25)\"\n      }\n    }\n  }\n});\n\nvar SearchNote =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SearchNote, _Component);\n\n  function SearchNote(props) {\n    var _this;\n\n    _classCallCheck(this, SearchNote);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SearchNote).call(this, props));\n    _this.state = {\n      notes: []\n    };\n\n    _this.setState({\n      notes: _this.props.updatedSearchResult\n    });\n\n    return _this;\n  }\n\n  _createClass(SearchNote, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps() {} //console.log(\"pros\", this.props)\n    // componentWillUpdate(){\n    //     console.log(\"updated search result\", this.state.updatedSearchResult)\n    //     this.setState({\n    //         notes: this.props.updatedSearchResult\n    //     })\n    //     console.log(\"updated search result\", this.state.notes)\n    // }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(\"updated search result\", this.state.notes);\n      console.log('size------', this.props.updatedSearchResult);\n\n      if (this.props.updatedSearchResult) {\n        var commentNodes = this.props.data.map(function (comment) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49\n            },\n            __self: this\n          }, React.createElement(\"h1\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50\n            },\n            __self: this\n          }, comment.author));\n        });\n      }\n\n      var searchedNotes = this.props.updatedSearchResult === '' ? '' : this.props.updatedSearchResult.map(function (keys) {\n        return keys === null ? '' : React.createElement(\"div\", {\n          key: keys.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        });\n      }); // let searchedNotes = this.props.updatedSearchResult===null?'' : \n      // this.props.updatedSearchResult.map((fields) => {\n      //     return (fields === null ? '' : <div>\n      //         <Card>\n      //             <CardContent>\n      //                 {fields.title}\n      //             </CardContent>\n      //         </Card>\n      //     </div>\n      //  )\n      // })\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, searchedNotes);\n    }\n  }]);\n\n  return SearchNote;\n}(Component);\n\nexport default withRouter(SearchNote);","map":{"version":3,"sources":["/home/soumajit/ReactProjectFundoo/fundoo/src/Components/Dashboard/searchNote.jsx"],"names":["React","Component","withRouter","MuiThemeProvider","createMuiTheme","InputBase","Card","Tooltip","TextField","CardContent","themes","overrides","MuiPaper","rounded","borderRadius","margin","elevation24","boxShadow","MuiBackdrop","root","backgroundColor","SearchNote","props","state","notes","setState","updatedSearchResult","console","log","commentNodes","data","map","comment","author","searchedNotes","keys","id"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,gBAAT,EAA2BC,cAA3B,QAAiD,0BAAjD;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,OAA1B,EAAmCC,SAAnC,EAA8CC,WAA9C,QAAiE,mBAAjE;AACA,IAAMC,MAAM,GAAGN,cAAc,CAAC;AAC1BO,EAAAA,SAAS,EAAE;AACPC,IAAAA,QAAQ,EAAE;AACNC,MAAAA,OAAO,EAAE;AACLC,QAAAA,YAAY,EAAE,KADT;AAELC,QAAAA,MAAM,EAAE;AAFH,OADH;AAKNC,MAAAA,WAAW,EAAE;AACTC,QAAAA,SAAS,EAAE;AADF;AALP,KADH;AAUPC,IAAAA,WAAW,EAAE;AACTC,MAAAA,IAAI,EAAE;AACFC,QAAAA,eAAe,EAAE;AADf;AADG;AAVN;AADe,CAAD,CAA7B;;IAkBMC,U;;;;;AACF,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,oFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE;AADE,KAAb;;AAGA,UAAKC,QAAL,CAAc;AACVD,MAAAA,KAAK,EAAE,MAAKF,KAAL,CAAWI;AADR,KAAd;;AALe;AAQlB;;;;gDAC2B,CAE3B,C,CADG;AAER;AACA;AACA;AACA;AACA;AACA;AACA;;;;6BACa;AACLC,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqC,KAAKL,KAAL,CAAWC,KAAhD;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyB,KAAKN,KAAL,CAAWI,mBAApC;;AACA,UAAI,KAAKJ,KAAL,CAAWI,mBAAf,EAAoC;AAChC,YAAIG,YAAY,GAAG,KAAKP,KAAL,CAAWQ,IAAX,CAAgBC,GAAhB,CAAoB,UAAUC,OAAV,EAAkB;AACrD,iBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAKA,OAAO,CAACC,MAAb,CADF,CADF;AAKH,SANkB,CAAnB;AAOD;;AACH,UAAIC,aAAa,GAAE,KAAKZ,KAAL,CAAWI,mBAAX,KAAkC,EAAlC,GAAwC,EAAxC,GACnB,KAAKJ,KAAL,CAAWI,mBAAX,CAA+BK,GAA/B,CAAmC,UAACI,IAAD,EAAU;AACzC,eACIA,IAAI,KAAK,IAAT,GAAgB,EAAhB,GACI;AAAM,UAAA,GAAG,EAAEA,IAAI,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFR;AAIH,OALD,CADA,CAZK,CAoBL;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAKA;AACA;;AAEA,aACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKF,aADL,CADR;AAMC;;;;EAlEgBjC,S;;AAoErB,eAAeC,UAAU,CAACmB,UAAD,CAAzB","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { InputBase, Card, Tooltip, TextField, CardContent } from '@material-ui/core';\nconst themes = createMuiTheme({\n    overrides: {\n        MuiPaper: {\n            rounded: {\n                borderRadius: \"8px\",\n                margin: \"10px\"\n            },\n            elevation24: {\n                boxShadow: \"none\"\n            }\n        },\n        MuiBackdrop: {\n            root: {\n                backgroundColor: \"rgba(15,15,15,0.25)\"\n            }\n        }\n    }\n})\nclass SearchNote extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            notes: [],\n        }\n        this.setState({\n            notes: this.props.updatedSearchResult\n        })\n    }\n    componentWillReceiveProps() {\n        //console.log(\"pros\", this.props)\n    }\n// componentWillUpdate(){\n//     console.log(\"updated search result\", this.state.updatedSearchResult)\n//     this.setState({\n//         notes: this.props.updatedSearchResult\n//     })\n//     console.log(\"updated search result\", this.state.notes)\n// }\n    render() {\n        console.log(\"updated search result\", this.state.notes)\n        console.log('size------',this.props.updatedSearchResult)\n        if (this.props.updatedSearchResult) {\n            var commentNodes = this.props.data.map(function (comment){\n                return (\n                  <div>\n                    <h1>{comment.author}</h1>\n                  </div>\n                );\n            });\n          }\n        let searchedNotes= this.props.updatedSearchResult=== '' ?  '' : \n        this.props.updatedSearchResult.map((keys) => {\n            return (\n                keys === null ? '' :\n                    < div key={keys.id} ></div>\n            )\n        }\n        )\n        // let searchedNotes = this.props.updatedSearchResult===null?'' : \n        \n        // this.props.updatedSearchResult.map((fields) => {\n        //     return (fields === null ? '' : <div>\n        //         <Card>\n        //             <CardContent>\n        //                 {fields.title}\n\n        //             </CardContent>\n\n        //         </Card>\n\n        //     </div>\n\n\n\n\n        //  )\n        // })\n\n        return (\n                <div>\n                    {searchedNotes}\n                </div>\n\n            )\n        }\n}\n    export default withRouter(SearchNote)"]},"metadata":{},"sourceType":"module"}