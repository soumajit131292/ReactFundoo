{"ast":null,"code":"import _classCallCheck from \"/home/soumajit/ReactProjectFundoo/fundoo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/soumajit/ReactProjectFundoo/fundoo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/soumajit/ReactProjectFundoo/fundoo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/soumajit/ReactProjectFundoo/fundoo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/soumajit/ReactProjectFundoo/fundoo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/soumajit/ReactProjectFundoo/fundoo/src/Components/Dashboard/collaborator.jsx\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PersonAddOutlinedIcon from '@material-ui/icons/PersonAddOutlined';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { ClickAwayListener } from '@material-ui/core';\nimport { getLoggedUser } from '../../Controller/Usercontroller';\nimport Button from '@material-ui/core/Button';\nimport { InputBase, Card, Tooltip, TextField, Snackbar, IconButton } from '@material-ui/core';\nimport { collaboratorAdd } from '../../Controller/colabController';\nimport DoneOutlinedIcon from '@material-ui/icons/DoneOutlined';\nimport Chip from '@material-ui/core/Chip';\nimport { getColabUser } from '../../Controller/NoteController';\n\nvar Collaborator =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Collaborator, _Component);\n\n  function Collaborator(props) {\n    var _this;\n\n    _classCallCheck(this, Collaborator);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Collaborator).call(this, props));\n\n    _this.dialogOpenClose = function () {\n      _this.getColabUserDetails();\n\n      console.log();\n\n      _this.setState({\n        open: !_this.state.open\n      });\n    };\n\n    _this.getColabUserDetails = function () {\n      getColabUser(_this.props.noteId.id).then(function (res) {\n        _this.colbaUserArray = res.data;\n      });\n    };\n\n    _this.closeDialogfromAway = function () {\n      _this.setState({\n        open: !_this.state.open\n      });\n    };\n\n    _this.getUser = function () {\n      getLoggedUser().then(function (res) {\n        _this.setState({\n          firstName: res.data.firstName,\n          id: res.data.id,\n          lastName: res.data.lastName,\n          email: res.data.email\n        });\n      });\n    };\n\n    _this.dialogReset = function () {\n      _this.setState({\n        view: !_this.state.view,\n        open: !_this.state.open\n      });\n    };\n\n    _this.snackBarClose = function () {\n      _this.setState({\n        Error: false\n      });\n    };\n\n    _this.onChangeEmailId = function (event) {\n      _this.setState({\n        emailId: event.target.value\n      });\n    };\n\n    _this.showIcon = function () {\n      _this.setState({\n        view: !_this.state.view\n      });\n    };\n\n    _this.saveColab = function () {\n      if (_this.state.emailId === '') {\n        _this.setState({\n          Error: true,\n          message: 'Please add email address',\n          chipOpen: !_this.state.open\n        });\n      } else if (!/[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$/.test(_this.state.emailId)) {\n        _this.setState({\n          Error: true,\n          message: 'Please provide a valid email address'\n        });\n      }\n\n      var colabBody = {\n        \"emailId\": _this.state.emailId\n      };\n      collaboratorAdd(_this.state.emailId, _this.props.noteId.id).then(function (res) {\n        console.log(res.data.object); // this.setState({\n        //     chipOpen: !this.state.open,\n        //     colbaUserArray: res.data.object,\n        // })\n      }).catch(function (res) {\n        _this.setState({\n          Error: true,\n          message: 'Please provide a valid email address',\n          open: !_this.state.open,\n          view: !_this.state.view\n        });\n      });\n    };\n\n    _this.state = {\n      open: false,\n      firstName: '',\n      lastName: '',\n      email: '',\n      view: false,\n      emailId: '',\n      id: '',\n      openSnackBar: '',\n      Error: false,\n      message: \"\",\n      chipOpen: false,\n      colbaUserArray: []\n    };\n    return _this;\n  }\n\n  _createClass(Collaborator, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getUser();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.state.colbaUserArray);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(Snackbar, {\n        anchorOrigin: {\n          vertical: \"bottom\",\n          horizontal: \"center\"\n        },\n        open: this.state.Error,\n        autoHideDuration: 6000,\n        onClose: this.snackBarClose,\n        message: this.state.message,\n        action: React.createElement(IconButton, {\n          onClick: this.snackBarClose,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }), React.createElement(Tooltip, {\n        title: \"Collaborator\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(PersonAddOutlinedIcon, {\n        onClick: this.dialogOpenClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      })), React.createElement(Dialog, {\n        open: this.state.open,\n        style: {\n          boxShadow: \"1px 1px 1px 1px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Collaborators\"), React.createElement(DialogContent, {\n        dividers: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, this.state.firstName, \" \", this.state.lastName, \" (Owner)\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }), this.state.email, !this.state.chipOpen ? null : this.state.colbaUserArray.map(function (colab) {\n        return React.createElement(\"div\", {\n          key: colab.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          },\n          __self: this\n        }, React.createElement(Chip, {\n          label: colab.email,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          },\n          __self: this\n        }));\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, !this.state.view ? React.createElement(InputBase, {\n        placeholder: \"add person\",\n        onClick: this.showIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }) : React.createElement(InputBase, {\n        type: \"email\",\n        placeholder: \"add person\",\n        value: this.state.emailId,\n        onChange: this.onChangeEmailId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }), !this.state.view ? null : React.createElement(DoneOutlinedIcon, {\n        onClick: this.saveColab,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }))), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.dialogReset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        onClick: this.saveColab,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, \"Save\"))));\n    }\n  }]);\n\n  return Collaborator;\n}(Component);\n\nexport default withRouter(Collaborator);","map":{"version":3,"sources":["/home/soumajit/ReactProjectFundoo/fundoo/src/Components/Dashboard/collaborator.jsx"],"names":["React","Component","withRouter","PersonAddOutlinedIcon","Dialog","DialogTitle","DialogContent","DialogActions","ClickAwayListener","getLoggedUser","Button","InputBase","Card","Tooltip","TextField","Snackbar","IconButton","collaboratorAdd","DoneOutlinedIcon","Chip","getColabUser","Collaborator","props","dialogOpenClose","getColabUserDetails","console","log","setState","open","state","noteId","id","then","res","colbaUserArray","data","closeDialogfromAway","getUser","firstName","lastName","email","dialogReset","view","snackBarClose","Error","onChangeEmailId","event","emailId","target","value","showIcon","saveColab","message","chipOpen","test","colabBody","object","catch","openSnackBar","vertical","horizontal","boxShadow","map","colab"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PersonAddOutlinedIcon from '@material-ui/icons/PersonAddOutlined';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { ClickAwayListener } from '@material-ui/core';\nimport { getLoggedUser } from '../../Controller/Usercontroller';\nimport Button from '@material-ui/core/Button';\nimport { InputBase, Card, Tooltip, TextField, Snackbar, IconButton } from '@material-ui/core';\nimport { collaboratorAdd } from '../../Controller/colabController';\nimport DoneOutlinedIcon from '@material-ui/icons/DoneOutlined';\nimport Chip from '@material-ui/core/Chip';\nimport { getColabUser } from '../../Controller/NoteController';\n\nclass Collaborator extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            open: false,\n            firstName: '',\n            lastName: '',\n            email: '',\n            view: false,\n            emailId: '',\n            id: '',\n            openSnackBar: '',\n            Error: false,\n            message: \"\",\n            chipOpen: false,\n            colbaUserArray: [],\n        }\n    }\n\n    dialogOpenClose = () => {\n        this.getColabUserDetails()\n        console.log()\n        this.setState({\n            open: !this.state.open,\n\n        })\n    }\n    getColabUserDetails=()=>{\n        getColabUser(this.props.noteId.id).then((res)=>{\n            this.colbaUserArray=res.data\n        })\n\n    }\n    closeDialogfromAway = () => {\n        this.setState({\n            open: !this.state.open\n        })\n    }\n\n    componentDidMount() {\n        this.getUser()\n    }\n    getUser = () => {\n        getLoggedUser().then((res) => {\n            this.setState({\n                firstName: res.data.firstName,\n                id: res.data.id,\n                lastName: res.data.lastName,\n                email: res.data.email,\n            })\n\n        })\n\n    }\n    dialogReset = () => {\n        this.setState({\n            view: !this.state.view,\n            open: !this.state.open\n        })\n    }\n    snackBarClose = () => {\n        this.setState({\n            Error: false\n        })\n    }\n    onChangeEmailId = (event) => {\n        this.setState({\n\n            emailId: event.target.value\n        })\n    }\n    showIcon = () => {\n        this.setState({\n            view: !this.state.view\n        })\n    }\n    saveColab = () => {\n        if(this.state.emailId==='')\n        {\n            this.setState({\n\n                Error: true,\n                message: 'Please add email address',\n                chipOpen: !this.state.open,\n            })\n        }\n       else if (!/[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$/.test(this.state.emailId)) {\n            this.setState({\n\n                Error: true,\n                message: 'Please provide a valid email address'\n            })\n        }\n        let colabBody = {\n            \"emailId\": this.state.emailId,\n\n        }\n        collaboratorAdd(this.state.emailId, this.props.noteId.id).then((res) => {\n            console.log(res.data.object);\n            // this.setState({\n            //     chipOpen: !this.state.open,\n            //     colbaUserArray: res.data.object,\n            // })\n\n        }).catch((res) => {\n            this.setState({\n                Error: true,\n                message: 'Please provide a valid email address',\n                open: !this.state.open,\n                view: !this.state.view\n            })\n        })\n\n    }\n\n\n    render() {\n        console.log(this.state.colbaUserArray)\n        return (\n            <div >\n                <Snackbar anchorOrigin={{\n                    vertical: \"bottom\",\n                    horizontal: \"center\"\n                }}\n                    open={this.state.Error}\n                    autoHideDuration={6000}\n                    onClose={this.snackBarClose}\n                    message={this.state.message}\n                    action={\n                        <IconButton\n                            onClick={this.snackBarClose}>\n                        </IconButton>\n                    } />\n                <Tooltip title=\"Collaborator\">\n                    <PersonAddOutlinedIcon onClick={this.dialogOpenClose} />\n                </Tooltip>\n\n\n                <Dialog open={this.state.open} style={{ boxShadow: \"1px 1px 1px 1px\" }} >\n\n                    <DialogTitle >\n                        Collaborators\n                    </DialogTitle>\n\n                    <DialogContent dividers >\n                        {this.state.firstName} {this.state.lastName} (Owner)<br />\n                        {this.state.email}\n                        {!this.state.chipOpen ? null :\n                            this.state.colbaUserArray.map((colab) => {\n                                return (<div key={colab.id}>\n                                    <Chip label={colab.email} /></div>)\n                                \n                            })\n                        }<br />\n\n                        <div>\n                            {!this.state.view ?\n                                <InputBase\n                                    placeholder=\"add person\"\n                                    onClick={this.showIcon}\n                                /> :\n                                <InputBase\n                                    type=\"email\"\n                                    placeholder=\"add person\"\n                                    value={this.state.emailId}\n                                    onChange={this.onChangeEmailId}\n                                />}\n                            {!this.state.view ? null : <DoneOutlinedIcon onClick={this.saveColab} />}\n                        </div>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.dialogReset} >\n                            Cancel\n                         </Button>\n                        <Button onClick={this.saveColab} >\n                            Save\n                        </Button>\n                    </DialogActions>\n\n                </Dialog>\n\n            </div>\n        )\n    }\n}\nexport default withRouter(Collaborator);"]},"metadata":{},"sourceType":"module"}