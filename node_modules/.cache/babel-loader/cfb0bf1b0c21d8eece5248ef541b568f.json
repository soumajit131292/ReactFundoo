{"ast":null,"code":"import _regeneratorRuntime from \"/home/soumajit/ReactProjectFundoo/fundoo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/soumajit/ReactProjectFundoo/fundoo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/soumajit/ReactProjectFundoo/fundoo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/soumajit/ReactProjectFundoo/fundoo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/soumajit/ReactProjectFundoo/fundoo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/soumajit/ReactProjectFundoo/fundoo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/soumajit/ReactProjectFundoo/fundoo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/soumajit/ReactProjectFundoo/fundoo/src/Components/Dashboard/unArchieve.jsx\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport UnarchiveOutlinedIcon from '@material-ui/icons/UnarchiveOutlined';\nimport { getArchivedNotes } from '../../Controller/NoteController';\nimport { InputBase, Card, Tooltip, TextField } from '@material-ui/core';\nimport Chip from '@material-ui/core/Chip';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport MoreVertOutlinedIcon from '@material-ui/icons/MoreVertOutlined';\nimport Dialog from '@material-ui/core/Dialog';\nimport Typography from '@material-ui/core/Typography';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport { updateNote } from '../../Controller/NoteController';\nimport More from './more';\nimport Popper from '@material-ui/core/Popper';\nimport { AppBar, Toolbar, IconButton, ClickAwayListener } from '@material-ui/core';\nimport { archiveNote } from '../../Controller/NoteController';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Archive from '../Dashboard/archive';\nimport Color from '../Dashboard/color';\nimport Collaborator from '../Dashboard/collaborator';\nimport Remainder from '../Dashboard/remainder';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nvar themes = createMuiTheme({\n  overrides: {\n    MuiPaper: {\n      rounded: {\n        borderRadius: \"8px\",\n        margin: \"10px\"\n      },\n      elevation24: {\n        boxShadow: \"none\"\n      }\n    },\n    MuiBackdrop: {\n      root: {\n        backgroundColor: \"rgba(15,15,15,0.25)\"\n      }\n    }\n  }\n});\n\nvar UnArchieve =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UnArchieve, _Component);\n\n  function UnArchieve(props) {\n    var _this;\n\n    _classCallCheck(this, UnArchieve);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UnArchieve).call(this, props));\n\n    _this.getArchiveNotes = function () {\n      getArchivedNotes().then(function (res) {\n        console.log(\"in getNotes \", res.data);\n\n        _this.setState({\n          notes: res.data.object\n        });\n\n        console.log('data', _this.state.notes);\n      });\n    };\n\n    _this.handleTitleChange = function (event) {\n      _this.setState({\n        title: event.target.value\n      });\n    };\n\n    _this.handleDescription = function (event) {\n      _this.setState({\n        description: event.target.value\n      });\n    };\n\n    _this.handleClickTakeNote = function (note, e) {\n      console.log(note);\n\n      _this.setState({\n        id: note.id,\n        title: note.title,\n        description: note.description,\n        openDialog: !_this.state.openDialog,\n        anchorEl: _this.state.anchorEl ? !_this.state.anchorEl : e.target\n      });\n    };\n\n    _this.closeDialog =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var editedNote;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(_this.state.title === \"\" && _this.state.description === \"\")) {\n                _context.next = 4;\n                break;\n              }\n\n              return _context.abrupt(\"return\", _this.setState({\n                openDialog: !_this.state.openDialog\n              }));\n\n            case 4:\n              editedNote = {\n                \"title\": _this.state.title,\n                \"description\": _this.state.description\n              };\n              console.log('noteed', editedNote);\n\n              _this.setState({\n                openDialog: !_this.state.openDialog\n              });\n\n              updateNote(editedNote, _this.state.id).then(function (res) {\n                _this.getArchiveNotes();\n\n                console.log(res.data);\n              });\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    _this.handleUnArchive = function (noteId) {\n      console.log(noteId);\n      archiveNote(noteId).then(function (res) {\n        _this.getArchiveNotes();\n\n        console.log(res.data);\n      });\n    };\n\n    _this.handleCloseDialog = function () {\n      _this.setState({\n        openDialog: !_this.state.openDialog\n      });\n    };\n\n    _this.change = function (value) {\n      if (value === true) _this.getArchiveNotes();\n    };\n\n    _this.reloadNote = function (value) {\n      if (value === true) _this.getArchiveNotes();\n    };\n\n    _this.archieveResponse = function (value) {\n      if (value === true) _this.getArchiveNotes();\n    };\n\n    _this.colabAdd = function (value) {\n      if (value === true) _this.getArchiveNotes();\n    };\n\n    _this.clobaDelete = function (value) {\n      if (value === true) _this.getArchiveNotes();\n    };\n\n    _this.deleteResponse = function (value) {\n      if (value === true) _this.getArchiveNotes();\n    };\n\n    _this.addLabelResponse = function (value) {\n      if (value === true) _this.getArchiveNotes();\n    };\n\n    _this.state = {\n      menuItem: false,\n      id: '',\n      title: '',\n      description: '',\n      notes: [],\n      openDialog: false,\n      anchorEl: null\n    };\n    return _this;\n  }\n\n  _createClass(UnArchieve, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getArchiveNotes();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var viewNote = !this.props.view ? \"note-display\" : \"fullbox-display\";\n      var viewFooter = !this.props.view ? \"note-display-footer\" : \"fullbox-display-footer\";\n      var getAllNotes = this.state.notes.map(function (keys) {\n        return React.createElement(\"div\", {\n          key: keys.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        }, React.createElement(Card, {\n          key: keys.id,\n          className: viewNote,\n          style: {\n            backgroundColor: keys.note.colorCode\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          onClick: function onClick(e) {\n            _this2.handleClickTakeNote(keys.note, e);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        }, React.createElement(CardContent, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164\n          },\n          __self: this\n        }, keys.note.title), React.createElement(CardContent, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          },\n          __self: this\n        }, keys.note.description, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168\n          },\n          __self: this\n        })), React.createElement(CardContent, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }, keys.note.remainder === null ? '' : React.createElement(Chip, {\n          label: keys.note.remainder,\n          onDelete: function onDelete() {\n            return _this2.deleteRemainder(keys.note);\n          },\n          onClick: function onClick(e) {\n            _this2.pickerOpen(e);\n          },\n          variant: \"outlined\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }), keys.note.labels.map(function (labela) {\n          return React.createElement(\"div\", {\n            key: labela.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 173\n            },\n            __self: this\n          }, labela === null ? '' : React.createElement(Chip, {\n            label: labela.labelName,\n            onDelete: function onDelete() {\n              return _this2.deleteLabel(labela);\n            },\n            variant: \"outlined\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 174\n            },\n            __self: this\n          }));\n        }), keys.user.map(function (colab) {\n          return React.createElement(\"div\", {\n            key: colab.colabId,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 179\n            },\n            __self: this\n          }, colab === null ? '' : React.createElement(Chip, {\n            label: colab.email,\n            variant: \"outlined\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 180\n            },\n            __self: this\n          }));\n        })))), React.createElement(CardActions, {\n          className: viewFooter,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          },\n          __self: this\n        }, React.createElement(Remainder, {\n          noteId: keys.note.id,\n          updateNote: _this2.reloadNote,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189\n          },\n          __self: this\n        }), React.createElement(Collaborator, {\n          noteId: keys.note,\n          collaboratorAdd: _this2.colabAdd,\n          collaboratorDelete: _this2.clobaDelete,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          },\n          __self: this\n        }), React.createElement(Color, {\n          noteId: keys.note.id,\n          changed: _this2.change,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191\n          },\n          __self: this\n        }), React.createElement(Archive, {\n          note: keys.note.id,\n          archievedDoneResposne: _this2.archieveResponse,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192\n          },\n          __self: this\n        }), React.createElement(More, {\n          noteId: keys.note.id,\n          moreToAllNotes: _this2.deleteResponse,\n          labelAdd: _this2.addLabelResponse,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193\n          },\n          __self: this\n        }))), React.createElement(Dialog, {\n          open: _this2.state.openDialog,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206\n          },\n          __self: this\n        }, React.createElement(DialogContent, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210\n          },\n          __self: this\n        }, React.createElement(TextField, {\n          type: \"text\",\n          multiline: true,\n          value: _this2.state.title,\n          onChange: _this2.handleTitleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211\n          },\n          __self: this\n        })), React.createElement(DialogContent, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217\n          },\n          __self: this\n        }, React.createElement(TextField, {\n          type: \"text\",\n          multiline: true,\n          value: _this2.state.description,\n          onChange: _this2.handleDescription,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218\n          },\n          __self: this\n        })), React.createElement(DialogActions, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225\n          },\n          __self: this\n        }, React.createElement(Remainder, {\n          noteId: keys.note.id,\n          updateNote: _this2.reloadNote,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226\n          },\n          __self: this\n        }), React.createElement(Collaborator, {\n          noteId: keys.note,\n          collaboratorAdd: _this2.colabAdd,\n          collaboratorDelete: _this2.clobaDelete,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227\n          },\n          __self: this\n        }), React.createElement(Color, {\n          noteId: keys.note.id,\n          changed: _this2.change,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 228\n          },\n          __self: this\n        }), React.createElement(Tooltip, {\n          title: \"UnArchive\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231\n          },\n          __self: this\n        }, React.createElement(UnarchiveOutlinedIcon, {\n          onClick: function onClick() {\n            return _this2.handleUnArchive(keys.note.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232\n          },\n          __self: this\n        })), React.createElement(More, {\n          noteId: keys.note.id,\n          moreToAllNotes: _this2.deleteResponse,\n          labelAdd: _this2.addLabelResponse,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234\n          },\n          __self: this\n        }), React.createElement(Button, {\n          className: \"button-close\",\n          onClick: _this2.closeDialog,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235\n          },\n          __self: this\n        }, \"Close\"))));\n      });\n      return React.createElement(\"div\", {\n        className: \"allUnThrashNotePage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, React.createElement(MuiThemeProvider, {\n        theme: themes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, getAllNotes));\n    }\n  }]);\n\n  return UnArchieve;\n}(Component);\n\nexport default withRouter(UnArchieve);","map":{"version":3,"sources":["/home/soumajit/ReactProjectFundoo/fundoo/src/Components/Dashboard/unArchieve.jsx"],"names":["React","Component","withRouter","UnarchiveOutlinedIcon","getArchivedNotes","InputBase","Card","Tooltip","TextField","Chip","MuiThemeProvider","createMuiTheme","MoreVertOutlinedIcon","Dialog","Typography","CardContent","CardActions","Button","updateNote","More","Popper","AppBar","Toolbar","IconButton","ClickAwayListener","archiveNote","CardHeader","Archive","Color","Collaborator","Remainder","DialogContent","DialogActions","themes","overrides","MuiPaper","rounded","borderRadius","margin","elevation24","boxShadow","MuiBackdrop","root","backgroundColor","UnArchieve","props","getArchiveNotes","then","res","console","log","data","setState","notes","object","state","handleTitleChange","event","title","target","value","handleDescription","description","handleClickTakeNote","note","e","id","openDialog","anchorEl","closeDialog","editedNote","handleUnArchive","noteId","handleCloseDialog","change","reloadNote","archieveResponse","colabAdd","clobaDelete","deleteResponse","addLabelResponse","menuItem","viewNote","view","viewFooter","getAllNotes","map","keys","colorCode","remainder","deleteRemainder","pickerOpen","labels","labela","labelName","deleteLabel","user","colab","colabId","email"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom';\nimport UnarchiveOutlinedIcon from '@material-ui/icons/UnarchiveOutlined';\nimport { getArchivedNotes } from '../../Controller/NoteController';\nimport { InputBase, Card, Tooltip, TextField } from '@material-ui/core';\nimport Chip from '@material-ui/core/Chip';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport MoreVertOutlinedIcon from '@material-ui/icons/MoreVertOutlined';\nimport Dialog from '@material-ui/core/Dialog';\nimport Typography from '@material-ui/core/Typography';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport { updateNote } from '../../Controller/NoteController';\nimport More from './more';\nimport Popper from '@material-ui/core/Popper';\nimport { AppBar, Toolbar, IconButton, ClickAwayListener } from '@material-ui/core';\nimport { archiveNote } from '../../Controller/NoteController';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Archive from '../Dashboard/archive';\nimport Color from '../Dashboard/color';\nimport Collaborator from '../Dashboard/collaborator';\nimport Remainder from '../Dashboard/remainder';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nconst themes = createMuiTheme({\n    overrides: {\n        MuiPaper: {\n            rounded: {\n                borderRadius: \"8px\",\n                margin: \"10px\",\n\n            },\n            elevation24: {\n                boxShadow: \"none\"\n            }\n        },\n        MuiBackdrop: {\n            root: {\n                backgroundColor: \"rgba(15,15,15,0.25)\"\n            }\n        }\n    }\n})\nclass UnArchieve extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            menuItem: false,\n            id: '',\n            title: '',\n            description: '',\n            notes: [],\n            openDialog: false,\n            anchorEl: null,\n        }\n    }\n    componentDidMount() {\n        this.getArchiveNotes();\n    }\n    getArchiveNotes = () => {\n        getArchivedNotes().then((res) => {\n            console.log(\"in getNotes \", res.data);\n            this.setState({\n                notes: res.data.object,\n            })\n            console.log('data', this.state.notes)\n        }\n        )\n    }\n    handleTitleChange = (event) => {\n        this.setState({\n            title: event.target.value\n        })\n    }\n    handleDescription = (event) => {\n        this.setState({\n            description: event.target.value\n        })\n    }\n\n    handleClickTakeNote = (note, e) => {\n        console.log(note)\n        this.setState({\n            id: note.id,\n            title: note.title,\n            description: note.description,\n            openDialog: !this.state.openDialog,\n            anchorEl: this.state.anchorEl ? !this.state.anchorEl : e.target\n        })\n    }\n\n    closeDialog = async () => {\n        if (this.state.title === \"\" && this.state.description === \"\")\n            return this.setState({ openDialog: !this.state.openDialog })\n        else {\n            var editedNote = {\n                \"title\": this.state.title,\n                \"description\": this.state.description,\n\n            }\n            console.log('noteed', editedNote)\n\n            this.setState({\n\n                openDialog: !this.state.openDialog,\n            })\n            updateNote(editedNote, this.state.id).then((res) => {\n                this.getArchiveNotes();\n                console.log(res.data);\n            })\n        }\n    }\n    handleUnArchive = (noteId) => {\n\n        console.log(noteId)\n        archiveNote(noteId).then((res) => {\n            this.getArchiveNotes();\n            console.log(res.data)\n        })\n    }\n    handleCloseDialog = () => {\n        this.setState({\n            openDialog: !this.state.openDialog,\n        })\n    }\n    change = (value) => {\n        if (value === true)\n        this.getArchiveNotes();\n    }\n    reloadNote=(value)=>{\n        if(value === true)\n        this.getArchiveNotes();\n    }\n    archieveResponse=(value)=>{\n        if(value === true)\n        this.getArchiveNotes();\n    }\n    colabAdd=(value)=>{\n        if(value===true)\n        this.getArchiveNotes();\n    }\n    clobaDelete=(value)=>{\n        if(value===true)\n        this.getArchiveNotes();\n    }\n    deleteResponse=(value)=>{\n        if(value===true)\n        this.getArchiveNotes();\n    }\n    addLabelResponse=(value)=>{\n        if(value===true)\n        this.getArchiveNotes();\n    }\n    render() {\n        const viewNote = !this.props.view ? \"note-display\" : \"fullbox-display\"\n        const viewFooter = !this.props.view ? \"note-display-footer\" : \"fullbox-display-footer\"\n        let getAllNotes = this.state.notes.map((keys) => {\n            return (\n                < div key={keys.id} >\n                    < Card key={keys.id} className={viewNote} style={{ backgroundColor: keys.note.colorCode }}>\n                        <div onClick={(e) => { this.handleClickTakeNote(keys.note, e) }}>\n                            <CardContent>\n                                {keys.note.title}\n                            </CardContent>\n                            <CardContent>\n                                {keys.note.description}<br />\n                            </CardContent>\n                            <CardContent>\n                                <div>{keys.note.remainder === null ? '' : <Chip label={keys.note.remainder} onDelete={() => this.deleteRemainder(keys.note)} onClick={(e) => { this.pickerOpen(e) }} variant=\"outlined\" />}\n                                    {keys.note.labels.map((labela) => {\n                                        return (<div key={labela.id}>{labela === null ? '' :\n                                            <Chip label={labela.labelName} onDelete={() => this.deleteLabel(labela)} variant=\"outlined\" />}\n                                        </div>);\n                                    })}\n                                    {keys.user.map((colab) => {\n\n                                        return (<div key={colab.colabId}>{colab === null ? '' :\n                                            <Chip label={colab.email} variant=\"outlined\" />}\n                                        </div>);\n\n                                    })}\n                                </div>\n\n                            </CardContent>\n                        </div>\n                        <CardActions className={viewFooter}>\n                            <Remainder noteId={keys.note.id} updateNote={this.reloadNote} />\n                            <Collaborator noteId={keys.note} collaboratorAdd={this.colabAdd} collaboratorDelete={this.clobaDelete} />\n                            <Color noteId={keys.note.id} changed={this.change} />\n                            <Archive note={keys.note.id} archievedDoneResposne={this.archieveResponse} />\n                            <More noteId={keys.note.id} moreToAllNotes={this.deleteResponse} labelAdd={this.addLabelResponse} />\n                            {/* <Remainder noteId={keys.note.id} />\n                            <Collaborator noteId={keys.note} />\n                            <Color noteId={keys.note.id} />\n                            <Tooltip title=\"UnArchive\">\n                                <UnarchiveOutlinedIcon onClick={() => this.handleUnArchive(keys.note.id)} />\n                            </Tooltip>\n                            <More noteId={keys.note.id} /> */}\n                        </CardActions>\n\n\n                    </Card >\n\n                    <Dialog open={this.state.openDialog} >\n\n                        {/* < Card className=\"note-dialog\" style={{ boxShadow: \"1px 1px 1px 1px\" }} > */}\n\n                        <DialogContent>\n                            <TextField\n                                type=\"text\"\n                                multiline\n                                value={this.state.title}\n                                onChange={this.handleTitleChange}\n                            /></DialogContent>\n                        <DialogContent>\n                            <TextField\n                                type=\"text\"\n                                multiline\n                                value={this.state.description}\n                                onChange={this.handleDescription}\n                            /></DialogContent>\n\n                        <DialogActions>\n                        <Remainder noteId={keys.note.id} updateNote={this.reloadNote} />\n                            <Collaborator noteId={keys.note} collaboratorAdd={this.colabAdd} collaboratorDelete={this.clobaDelete} />\n                            <Color noteId={keys.note.id} changed={this.change} />\n                            {/* <Archive note={keys.note.id} archievedDoneResposne={this.archieveResponse} /> */}\n                           \n                            <Tooltip title=\"UnArchive\">\n                                <UnarchiveOutlinedIcon onClick={() => this.handleUnArchive(keys.note.id)} />\n                            </Tooltip>\n                            <More noteId={keys.note.id} moreToAllNotes={this.deleteResponse} labelAdd={this.addLabelResponse}/>\n                            <Button className=\"button-close\" onClick={this.closeDialog}>Close</Button>\n                        </DialogActions>\n                        {/* </Card > */}\n\n                    </Dialog>\n\n                </div >\n            )\n        })\n        return (\n            <div className=\"allUnThrashNotePage\">\n                <MuiThemeProvider theme={themes}>\n                    {getAllNotes}\n                </MuiThemeProvider>\n            </div >\n        )\n    }\n\n\n}\nexport default withRouter(UnArchieve)"]},"metadata":{},"sourceType":"module"}