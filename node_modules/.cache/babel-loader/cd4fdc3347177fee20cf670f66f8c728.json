{"ast":null,"code":"import _toConsumableArray from \"/home/soumajit/ReactProjectFundoo/fundoo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/soumajit/ReactProjectFundoo/fundoo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/soumajit/ReactProjectFundoo/fundoo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/soumajit/ReactProjectFundoo/fundoo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/soumajit/ReactProjectFundoo/fundoo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/soumajit/ReactProjectFundoo/fundoo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/soumajit/ReactProjectFundoo/fundoo/src/Components/Dashboard/allNotes.jsx\";\nimport React, { Component } from 'react';\nimport { NoteController } from '../../Controller/NoteController';\nimport { InputBase, Card, Tooltip, TextField } from '@material-ui/core';\nimport { withRouter } from 'react-router-dom';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport { deleteLabel } from '../../Controller/label';\nimport More from './more';\nimport Collaborator from '../Dashboard/collaborator';\nimport { AppBar, Toolbar, IconButton, ClickAwayListener } from '@material-ui/core';\nimport Chip from '@material-ui/core/Chip';\nimport Remainder from '../Dashboard/remainder';\nimport Archive from '../Dashboard/archive';\nvar themes = createMuiTheme({\n  overrides: {\n    MuiPaper: {\n      rounded: {\n        borderRadius: \"8px\",\n        margin: \"10px\"\n      },\n      elevation24: {\n        boxShadow: \"none\"\n      }\n    },\n    MuiBackdrop: {\n      root: {\n        backgroundColor: \"rgba(15,15,15,0.25)\"\n      }\n    }\n  }\n});\n\nvar AllNotes =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AllNotes, _Component);\n\n  function AllNotes(props) {\n    var _this;\n\n    _classCallCheck(this, AllNotes);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AllNotes).call(this, props));\n\n    _this.getNotes = function () {\n      NoteController().then(function (res) {\n        console.log(\"in getNotes \", res.data);\n\n        _this.setState({\n          notes: res.data\n        });\n\n        console.log('data', _this.state.notes);\n        console.log('colab', _this.state.colabs);\n      });\n    };\n\n    _this.updateCard = function (note) {\n      console.log(\"new note\", note);\n      var updatedNotes = [].concat(_toConsumableArray(_this.state.notes), [note]);\n\n      _this.setState({\n        notes: updatedNotes\n      });\n    };\n\n    _this.handleTitleChange = function (event) {\n      _this.setState({\n        title: event.target.value\n      });\n    };\n\n    _this.handleDescription = function (event) {\n      _this.setState({\n        description: event.target.value\n      });\n    };\n\n    _this.handleClickTakeNote = function (note) {\n      console.log(note);\n\n      _this.setState({\n        id: note.id,\n        title: note.title,\n        description: note.description,\n        openDialog: !_this.state.openDialog\n      });\n    };\n\n    _this.deleteLabel = function (label) {\n      console.log(label);\n      deleteLabel(label.id).then(function (res) {\n        console.log(res.data);\n      }).catch(function (err) {\n        console.log(err.data);\n      });\n    };\n\n    _this.closeDialog = function () {\n      if (_this.state.title === \"\" && _this.state.description === \"\") return _this.setState({\n        openDialog: !_this.state.openDialog\n      });else {\n        var editedNote = {\n          \"title\": _this.state.title,\n          \"description\": _this.state.description\n        };\n        console.log('noteed', editedNote);\n\n        _this.setState({\n          openDialog: !_this.state.openDialog\n        }); // updateNote(editedNote, this.state.id).then((res) => {\n        //     console.log(res.data);\n        // })\n\n      }\n    };\n\n    _this.state = {\n      menuItem: false,\n      id: '',\n      title: '',\n      description: '',\n      notes: [],\n      openDialog: false,\n      colabs: []\n    };\n    return _this;\n  }\n\n  _createClass(AllNotes, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getNotes();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var getAllNotes = this.state.notes.map(function (keys) {\n        return keys === null ? '' : React.createElement(\"div\", {\n          key: keys.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, React.createElement(Card, {\n          key: keys.id,\n          className: \"note-display\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          onClick: function onClick() {\n            _this2.handleClickTakeNote(keys);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, React.createElement(CardContent, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }, keys.title), React.createElement(CardContent, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, keys.description, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, keys.remainder === null ? '' : React.createElement(Chip, {\n          label: keys.remainder,\n          onDelete: function onDelete() {\n            return _this2.deleteRemainder(keys);\n          },\n          variant: \"outlined\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }), keys.labels.map(function (labela) {\n          return React.createElement(\"div\", {\n            key: labela.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 139\n            },\n            __self: this\n          }, labela === null ? '' : React.createElement(Chip, {\n            label: labela.labelName,\n            onDelete: function onDelete() {\n              return _this2.deleteLabel(labela);\n            },\n            variant: \"outlined\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 140\n            },\n            __self: this\n          }));\n        })))), React.createElement(CardActions, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }, React.createElement(Collaborator, {\n          noteId: keys,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        }), React.createElement(Archive, {\n          note: keys.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        }), React.createElement(More, {\n          noteId: keys.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        }))), React.createElement(Dialog, {\n          open: _this2.state.openDialog,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        }, React.createElement(Card, {\n          className: \"note-dialog\",\n          style: {\n            boxShadow: \"1px 1px 1px 1px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        }, React.createElement(CardContent, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157\n          },\n          __self: this\n        }, React.createElement(TextField, {\n          type: \"text\",\n          multiline: true,\n          value: _this2.state.title,\n          onChange: _this2.handleTitleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        })), React.createElement(CardContent, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          },\n          __self: this\n        }, React.createElement(TextField, {\n          type: \"text\",\n          multiline: true,\n          value: _this2.state.description,\n          onChange: _this2.handleDescription,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          },\n          __self: this\n        })), React.createElement(CardActions, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        }, React.createElement(Remainder, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        }), React.createElement(Archive, {\n          note: keys.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179\n          },\n          __self: this\n        }), React.createElement(More, {\n          noteId: keys.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180\n          },\n          __self: this\n        }), React.createElement(Button, {\n          className: \"button-close\",\n          style: {\n            float: \"right \"\n          },\n          onClick: _this2.closeDialog,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181\n          },\n          __self: this\n        }, \"Close\")))));\n      }); // let getAllNotes = this.state.notes.map((keys) => {\n      //     return (\n      // < div key={keys.id} >\n      //     < Card key={keys.id} className=\"note-display\" >\n      //         <div onClick={() => { this.handleClickTakeNote(keys) }}>\n      //             <CardContent>\n      //                 {keys.title}\n      //             </CardContent>\n      //             <CardContent>\n      //                 {keys.description}<br/>\n      //                 <div>{keys.remainder=== null ? '': <Chip  label=  {keys.remainder} onDelete={()=>this.deleteRemainder(keys)} variant=\"outlined\"/> }\n      //                 {keys.labels.map((labela) =>{\n      //                     return ( <div key={labela.id}>{labela === null? '':\n      //                     <Chip  label=  {labela.labelName} onDelete={()=>this.deleteLabel(labela)} variant=\"outlined\"/>}\n      //                     </div> );\n      //                 })}\n      //                 {keys.colab.map((colab) =>{\n      //                     return ( <div key={colab.colabId}>{colab === null? '':\n      //                     <Chip  label=  {colab.userEmailId} variant=\"outlined\"/>}\n      //                     </div> );\n      //                 })}\n      //                 </div>\n      //             </CardContent>\n      //         </div>\n      //         <CardActions  >\n      //             <Remainder noteId={keys.id}/>\n      //             <Collaborator noteId={keys}/>\n      //             <Archive note={keys.id}/>\n      //             <More noteId={keys.id} />\n      //         </CardActions>\n      //     </Card >\n      //     <Dialog open={this.state.openDialog} >\n      //         < Card className=\"note-dialog\" style={{ boxShadow: \"1px 1px 1px 1px\"}} >\n      //             <CardContent>\n      //                 <TextField\n      //                     type=\"text\"\n      //                     multiline\n      //                     value={this.state.title}\n      //                     onChange={this.handleTitleChange}\n      //                 /></CardContent>\n      //             <CardContent>\n      //                 <TextField\n      //                     type=\"text\"\n      //                     multiline\n      //                     value={this.state.description}\n      //                     onChange={this.handleDescription}\n      //                 /></CardContent>\n      //             <CardActions>\n      //             <Remainder />\n      //             <Collaborator noteId={keys}/>\n      //             <Archive note={keys.id}/>\n      //                 <More noteId={keys.id} />\n      //                 <Button className=\"button-close\" style={{float: \"right \"} } onClick={this.closeDialog}>Close</Button>\n      //             </CardActions>\n      //         </Card >\n      //     </Dialog>\n      //   </div >\n      //     )\n      // });\n\n      return React.createElement(\"div\", {\n        className: \"allNotePage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, React.createElement(MuiThemeProvider, {\n        theme: themes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, getAllNotes));\n    }\n  }]);\n\n  return AllNotes;\n}(Component);\n\nexport default withRouter(AllNotes);","map":{"version":3,"sources":["/home/soumajit/ReactProjectFundoo/fundoo/src/Components/Dashboard/allNotes.jsx"],"names":["React","Component","NoteController","InputBase","Card","Tooltip","TextField","withRouter","MuiThemeProvider","createMuiTheme","Dialog","CardContent","CardActions","Button","deleteLabel","More","Collaborator","AppBar","Toolbar","IconButton","ClickAwayListener","Chip","Remainder","Archive","themes","overrides","MuiPaper","rounded","borderRadius","margin","elevation24","boxShadow","MuiBackdrop","root","backgroundColor","AllNotes","props","getNotes","then","res","console","log","data","setState","notes","state","colabs","updateCard","note","updatedNotes","handleTitleChange","event","title","target","value","handleDescription","description","handleClickTakeNote","id","openDialog","label","catch","err","closeDialog","editedNote","menuItem","getAllNotes","map","keys","remainder","deleteRemainder","labels","labela","labelName","float"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { NoteController } from '../../Controller/NoteController';\nimport { InputBase, Card, Tooltip, TextField } from '@material-ui/core';\nimport { withRouter } from 'react-router-dom';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nimport Dialog from '@material-ui/core/Dialog';\n\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport { deleteLabel } from '../../Controller/label';\nimport More from './more';\nimport Collaborator from '../Dashboard/collaborator';\nimport { AppBar, Toolbar, IconButton, ClickAwayListener } from '@material-ui/core';\nimport Chip from '@material-ui/core/Chip';\nimport Remainder from '../Dashboard/remainder';\nimport Archive from '../Dashboard/archive';\n\nconst themes = createMuiTheme({\n    overrides: {\n        MuiPaper: {\n            rounded: {\n                borderRadius: \"8px\",\n                margin:\"10px\" \n            },\n            elevation24: {\n                boxShadow: \"none\"\n            }\n        },\n        MuiBackdrop: {\n            root: {\n                backgroundColor: \"rgba(15,15,15,0.25)\"\n            }\n        }\n    }\n})\n class AllNotes extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            menuItem: false,\n            id: '',\n            title: '',\n            description: '',\n            notes: [],\n            openDialog: false,\n            colabs:[],\n        }\n\n    }\n    componentDidMount() {\n        this.getNotes();\n    }\n    getNotes = () => {\n        NoteController().then((res) => {\n            console.log(\"in getNotes \", res.data);\n            this.setState({\n                notes: res.data,\n            })\n            console.log('data', this.state.notes)\n            console.log('colab', this.state.colabs)\n        }\n        )\n    }\n    updateCard=(note)=>{\n        console.log(\"new note\",note);\n        \n        var updatedNotes=[...this.state.notes,note];\n        this.setState({\n            notes:updatedNotes\n        })\n    }\n    handleTitleChange = (event) => {\n        this.setState({\n            title: event.target.value\n        })\n    }\n    handleDescription = (event) => {\n        this.setState({\n            description: event.target.value\n        })\n    }\n\n    handleClickTakeNote = (note) => {\n        console.log(note)\n        this.setState({\n            id: note.id,\n            title: note.title,\n            description: note.description,\n            openDialog: !this.state.openDialog,\n        })\n    }\n    deleteLabel=(label)=>{\nconsole.log(label)\ndeleteLabel(label.id).then((res)=>{\n    console.log(res.data)\n}).catch((err)=>{\n    console.log(err.data)\n})\n    }\n    closeDialog = () => {\n        if (this.state.title === \"\" && this.state.description === \"\")\n            return this.setState({ openDialog: !this.state.openDialog })\n        else {\n            var editedNote = {\n                \"title\": this.state.title,\n                \"description\": this.state.description,\n\n            }\n            console.log('noteed', editedNote)\n\n            this.setState({\n\n                openDialog: !this.state.openDialog,\n            })\n            // updateNote(editedNote, this.state.id).then((res) => {\n            //     console.log(res.data);\n            // })\n        }\n    }\n\n    render() {\n        let getAllNotes = this.state.notes.map((keys)=>{ \n            return(\n                keys=== null ? '' : \n                < div key={keys.id} >\n                < Card key={keys.id} className=\"note-display\" >\n                    <div onClick={() => { this.handleClickTakeNote(keys) }}>\n                        <CardContent>\n                            {keys.title}\n                        </CardContent>\n                        <CardContent>\n                            {keys.description}<br/>\n                            <div>{keys.remainder=== null ? '': <Chip  label=  {keys.remainder} onDelete={()=>this.deleteRemainder(keys)} variant=\"outlined\"/> }\n                           \n                            {keys.labels.map((labela) =>{\n                                \n                                return ( <div key={labela.id}>{labela === null? '':\n                                <Chip  label=  {labela.labelName} onDelete={()=>this.deleteLabel(labela)} variant=\"outlined\"/>}\n                                </div> );\n                                \n                            })}\n                            \n                            </div>\n                        </CardContent>\n                    </div>\n                    <CardActions  >\n                        {/* <Remainder noteId={keys.id}/> */}\n                        <Collaborator noteId={keys}/>\n                        <Archive note={keys.id}/>\n                        <More noteId={keys.id} />\n                    </CardActions>\n                </Card >\n                <Dialog open={this.state.openDialog} >\n                    < Card className=\"note-dialog\" style={{ boxShadow: \"1px 1px 1px 1px\"}} >\n                        <CardContent>\n                            <TextField\n                                type=\"text\"\n                                multiline\n                                \n\n                                value={this.state.title}\n                                onChange={this.handleTitleChange}\n                            /></CardContent>\n                        <CardContent>\n                            <TextField\n                                type=\"text\"\n                                multiline\n                                value={this.state.description}\n                                onChange={this.handleDescription}\n                            /></CardContent>\n                        <CardActions>\n                        <Remainder />\n                        {/* <Collaborator noteId={keys}/> */}\n                        \n                            \n                        \n                        <Archive note={keys.id}/>\n                            <More noteId={keys.id} />\n                            <Button className=\"button-close\" style={{float: \"right \"} } onClick={this.closeDialog}>Close</Button>\n                           \n                        </CardActions>\n                    </Card >\n                </Dialog>\n              </div >\n            )\n        })\n        // let getAllNotes = this.state.notes.map((keys) => {\n        //     return (\n\n                // < div key={keys.id} >\n                //     < Card key={keys.id} className=\"note-display\" >\n                //         <div onClick={() => { this.handleClickTakeNote(keys) }}>\n                //             <CardContent>\n                //                 {keys.title}\n                //             </CardContent>\n                //             <CardContent>\n                //                 {keys.description}<br/>\n                //                 <div>{keys.remainder=== null ? '': <Chip  label=  {keys.remainder} onDelete={()=>this.deleteRemainder(keys)} variant=\"outlined\"/> }\n                               \n                //                 {keys.labels.map((labela) =>{\n                                    \n                //                     return ( <div key={labela.id}>{labela === null? '':\n                //                     <Chip  label=  {labela.labelName} onDelete={()=>this.deleteLabel(labela)} variant=\"outlined\"/>}\n                //                     </div> );\n                                    \n                //                 })}\n                //                 {keys.colab.map((colab) =>{\n                                    \n                //                     return ( <div key={colab.colabId}>{colab === null? '':\n                //                     <Chip  label=  {colab.userEmailId} variant=\"outlined\"/>}\n                //                     </div> );\n                                    \n                //                 })}\n                //                 </div>\n                //             </CardContent>\n                //         </div>\n                //         <CardActions  >\n                //             <Remainder noteId={keys.id}/>\n                //             <Collaborator noteId={keys}/>\n                //             <Archive note={keys.id}/>\n                //             <More noteId={keys.id} />\n                //         </CardActions>\n                //     </Card >\n                //     <Dialog open={this.state.openDialog} >\n                //         < Card className=\"note-dialog\" style={{ boxShadow: \"1px 1px 1px 1px\"}} >\n                //             <CardContent>\n                //                 <TextField\n                //                     type=\"text\"\n                //                     multiline\n                                    \n\n                //                     value={this.state.title}\n                //                     onChange={this.handleTitleChange}\n                //                 /></CardContent>\n                //             <CardContent>\n                //                 <TextField\n                //                     type=\"text\"\n                //                     multiline\n                //                     value={this.state.description}\n                //                     onChange={this.handleDescription}\n                //                 /></CardContent>\n                //             <CardActions>\n                //             <Remainder />\n                //             <Collaborator noteId={keys}/>\n                            \n                                \n                            \n                //             <Archive note={keys.id}/>\n                //                 <More noteId={keys.id} />\n                //                 <Button className=\"button-close\" style={{float: \"right \"} } onClick={this.closeDialog}>Close</Button>\n                               \n                //             </CardActions>\n                //         </Card >\n                //     </Dialog>\n                //   </div >\n        //     )\n        // });\n        return (\n            <div className=\"allNotePage\">\n                <MuiThemeProvider theme={themes}>\n                    {getAllNotes}\n                </MuiThemeProvider>\n            </div >\n        )\n    }\n}\nexport default withRouter(AllNotes)"]},"metadata":{},"sourceType":"module"}